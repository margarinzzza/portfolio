{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041D\\u0438\\u043A\\u0438\\u0442\\u043E\\u0441\\\\Documents\\\\GitHub\\\\portfolio\\\\content\\\\memory-card-game\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isGameStart, setIsGameStart] = useState(false);\n  const [complexity, setComplexity] = useState(null);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [cardsArr, setCardsArr] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const checkGameComplexity = () => {\n    let complexityLevel;\n    let arr = [...new Array(3)];\n    switch (complexity) {\n      case 'lowComplexity':\n        complexityLevel = 1;\n        break;\n      case 'midComplexity':\n        complexityLevel = 2;\n        break;\n      case 'highComplexity':\n        complexityLevel = 3;\n        break;\n      default:\n        break;\n    }\n    return arr.map((el, idx) => {\n      if (idx + 1 <= complexityLevel) {\n        return /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-star-fill\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-star\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  const selectCard = value => {\n    if (selectedCards.length !== 2) {\n      let candidate;\n      let arr;\n      for (let i = 0; i < selectedCards.length; i++) {\n        if (selectedCards[i] == value.idx) candidate = true;\n      }\n      if (candidate) {\n        arr = selectedCards.filter(el => el !== value.idx);\n        return setSelectedCards(arr);\n      }\n      setSelectedCards([...selectedCards, value]);\n    }\n  };\n  useEffect(() => {\n    console.log(selectedCards);\n    if (selectedCards.length == 2) {\n      if (selectedCards[0].el == selectedCards[1].el) {\n        let matchedCardsArr = [selectedCards[0].el, selectedCards[1]];\n        setMatchedCards([...matchedCards, ...matchedCardsArr]);\n        setTimeout(() => {\n          setSelectedCards([]);\n        }, 1000);\n      } else {\n        setTimeout(() => {\n          setSelectedCards([]);\n        }, 1000);\n      }\n    }\n  }, [selectedCards]);\n  const checkSelectedCards = value => {\n    let candidate;\n    for (let i = 0; i < selectedCards.length; i++) {\n      if (selectedCards[i].idx == value) {\n        candidate = true;\n      }\n    }\n    if (candidate) {\n      return 'selectedCard';\n    } else return '';\n  };\n  const createRandomNumbers = (length, max) => {\n    let arr = [];\n    while (arr.length < length / 2) {\n      let number = Math.floor(Math.random() * max) + 1;\n      if (arr.indexOf(number) === -1) arr.push(number);\n    }\n    return arr;\n  };\n  useEffect(() => {\n    let arr = [];\n    switch (complexity) {\n      case 'lowComplexity':\n        arr = createRandomNumbers(12, 100);\n        break;\n      case 'midComplexity':\n        arr = createRandomNumbers(20, 100);\n        break;\n      case 'highComplexity':\n        arr = createRandomNumbers(48, 100);\n        break;\n      default:\n        break;\n    }\n    setCardsArr([...arr, ...arr]);\n  }, [complexity]);\n  const endGame = () => {\n    setIsGameStart(false);\n    setComplexity(null);\n    setSelectedCards([]);\n  };\n  const startGame = complexity => {\n    setIsGameStart(true);\n    setComplexity(complexity);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Matching Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), isGameStart ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"complexity\",\n          children: checkGameComplexity()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time\",\n          children: \"12:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"moves\",\n          children: \"2 Moves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            onClick: () => endGame(),\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"20\",\n            height: \"20\",\n            fill: \"currentColor\",\n            className: \"bi bi-arrow-clockwise\",\n            viewBox: \"0 0 16 16\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              fillRule: \"evenodd\",\n              d: \"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `gameField ${complexity !== null && complexity}`,\n        children: cardsArr.map((el, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => selectCard({\n              idx,\n              el\n            }),\n            className: `card ${checkSelectedCards(idx)}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: el\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select difficulty level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"difficultySelector\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => startGame('lowComplexity'),\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => startGame('midComplexity'),\n          children: \"Middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => startGame('highComplexity'),\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aqqmvoinSU2LvKZE+sQJd/Je6bM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","App","isGameStart","setIsGameStart","complexity","setComplexity","selectedCards","setSelectedCards","cardsArr","setCardsArr","matchedCards","setMatchedCards","checkGameComplexity","complexityLevel","arr","Array","map","el","idx","selectCard","value","length","candidate","i","filter","console","log","matchedCardsArr","setTimeout","checkSelectedCards","createRandomNumbers","max","number","Math","floor","random","indexOf","push","endGame","startGame"],"sources":["C:/Users/Никитос/Documents/GitHub/portfolio/content/memory-card-game/src/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst App = () => {\n\n  const [isGameStart, setIsGameStart] = useState(false)\n  const [complexity, setComplexity] = useState(null)\n  const [selectedCards, setSelectedCards] = useState([])\n  const [cardsArr, setCardsArr] = useState([])\n  const [matchedCards, setMatchedCards] = useState([])\n\n  const checkGameComplexity = () => {\n    let complexityLevel\n    let arr = [...new Array(3)]\n\n    switch (complexity) {\n      case 'lowComplexity':\n        complexityLevel = 1\n        break\n\n      case 'midComplexity':\n        complexityLevel = 2\n        break\n\n      case 'highComplexity':\n        complexityLevel = 3\n        break\n\n      default: break;\n    }\n\n    return arr.map((el, idx) => {\n      if (idx + 1 <= complexityLevel) {\n        return (\n          <svg key={idx} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\n          </svg>\n        )\n      } else {\n        return (\n          <svg key={idx} xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star\" viewBox=\"0 0 16 16\">\n            <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\" />\n          </svg>\n        )\n      }\n    })\n\n  }\n\n  const selectCard = (value) => {\n    if (selectedCards.length !== 2) {\n      let candidate\n      let arr\n      for (let i = 0; i < selectedCards.length; i++) {\n        if (selectedCards[i] == value.idx) candidate = true\n      }\n      if (candidate) {\n        arr = selectedCards.filter(el => el !== value.idx)\n        return setSelectedCards(arr)\n      }\n      setSelectedCards([...selectedCards, value])\n    }\n  }\n\n  useEffect(() => {\n    console.log(selectedCards)\n    if (selectedCards.length == 2) {\n      if (selectedCards[0].el == selectedCards[1].el) {\n        let matchedCardsArr = [selectedCards[0].el, selectedCards[1]]\n        setMatchedCards([...matchedCards, ...matchedCardsArr])\n        setTimeout(() => {\n          setSelectedCards([])\n        }, 1000)\n      } else {\n        setTimeout(() => {\n          setSelectedCards([])\n        }, 1000)\n      }\n    }\n\n  }, [selectedCards])\n\n  const checkSelectedCards = (value) => {\n    let candidate\n    for (let i = 0; i < selectedCards.length; i++) {\n      if (selectedCards[i].idx == value) {\n        candidate = true\n      }\n    }\n    if (candidate) {\n      return 'selectedCard'\n    } else return ''\n  }\n\n  const createRandomNumbers = (length, max) => {\n    let arr = [];\n    while (arr.length < length / 2) {\n      let number = Math.floor(Math.random() * max) + 1;\n      if (arr.indexOf(number) === -1 ) arr.push(number);\n    }\n    return arr\n  }\n\n  useEffect(() => {\n    let arr = []\n    switch (complexity) {\n      case 'lowComplexity':\n        arr = createRandomNumbers(12, 100)\n        break\n\n      case 'midComplexity':\n        arr = createRandomNumbers(20, 100)\n        break\n\n      case 'highComplexity':\n        arr = createRandomNumbers(48, 100)\n        break\n\n      default: break;\n    }\n\n    setCardsArr([...arr, ...arr])\n  }, [complexity])\n\n  const endGame = () => {\n    setIsGameStart(false)\n    setComplexity(null)\n    setSelectedCards([])\n  }\n\n  const startGame = (complexity) => {\n    setIsGameStart(true)\n    setComplexity(complexity)\n  }\n\n  return (\n    <div className=\"app\">\n      <h1>Matching Game</h1>\n      {isGameStart ?\n        <>\n          <div className=\"gameInfo\">\n            <div className=\"complexity\">{checkGameComplexity()}</div>\n            <div className=\"time\">12:00</div>\n            <div className=\"moves\">2 Moves</div>\n            <div>\n              <svg onClick={() => endGame()} xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-arrow-clockwise\" viewBox=\"0 0 16 16\">\n                <path fillRule=\"evenodd\" d=\"M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z\" />\n                <path d=\"M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z\" />\n              </svg>\n            </div>\n          </div>\n          <div className={`gameField ${complexity !== null && complexity}`}>\n            {cardsArr.map((el, idx) => {\n              return <div onClick={() => selectCard({idx, el})} key={idx} className={`card ${checkSelectedCards(idx)}`}>\n                <span>{el}</span>\n              </div>\n            })}\n          </div>\n        </> :\n        <div>\n          <h2>Select difficulty level</h2>\n          <div className=\"difficultySelector\">\n            <span onClick={() => startGame('lowComplexity')}>Low</span>\n            <span onClick={() => startGame('midComplexity')}>Middle</span>\n            <span onClick={() => startGame('highComplexity')}>Hard</span>\n          </div>\n        </div>\n      }\n\n    </div>\n  );\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}