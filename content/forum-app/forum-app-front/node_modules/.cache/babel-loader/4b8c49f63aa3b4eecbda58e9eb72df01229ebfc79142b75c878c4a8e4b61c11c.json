{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios.js';\nconst initialState = {\n  showedThreadsNum: 0,\n  threadsLength: 0,\n  threadsLoadStatus: 'loading',\n  threadLoadStatus: 'loading',\n  searchQuery: '',\n  currentTape: 1,\n  threads: [],\n  thread: [],\n  threadName: '',\n  threadDesc: '',\n  createThreadError: ''\n};\nexport const getThreads = createAsyncThunk('/getThreads', async (params, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const {\n      data\n    } = await axios.post(`/getThreads`, params);\n    return data;\n  } catch (e) {\n    return rejectWithValue(e.response.data);\n  }\n});\nexport const createThread = createAsyncThunk('/createThread', async (params, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await axios.post(`/createThread`, params);\n    return data;\n  } catch (e) {\n    return rejectWithValue(e.response.data);\n  }\n});\nexport const getThread = createAsyncThunk('/getThread', async (params, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n  try {\n    const {\n      data\n    } = await axios.get(`/getThread/${params.threadId}`, params);\n    return data;\n  } catch (e) {\n    return rejectWithValue(e.response.data);\n  }\n});\nexport const threadSlice = createSlice({\n  name: 'thread',\n  initialState,\n  reducers: {\n    loadMoreThreads: (state, action) => {\n      state.currentTape += 1;\n    },\n    setThreadName: (state, action) => {\n      state.th = action.payload;\n    },\n    setThreadDesc: (state, action) => {\n      state.boardDesc = action.payload;\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    }\n  },\n  extraReducers: {\n    [getThreads.pending]: state => {\n      state.threadsLoadStatus = 'loading';\n    },\n    [getThreads.fulfilled]: (state, action) => {\n      state.threads = action.payload.threadsData;\n      state.threadsLength = action.payload.threadsDataLength;\n      state.showedThreadsNum = action.payload.showedThreadsNum;\n      state.threadsLoadStatus = 'loaded';\n    },\n    [getThreads.rejected]: (state, action) => {\n      console.log(action.payload.msg);\n      state.threadsLoadStatus = 'err';\n    },\n    [getThread.pending]: state => {\n      state.threadLoadStatus = 'loading';\n    },\n    [getThread.fulfilled]: (state, action) => {\n      state.thread = action.payload.threadData;\n      state.threadLoadStatus = 'loaded';\n    },\n    [getThread.rejected]: (state, action) => {\n      console.log(action.payload.msg);\n      state.threadLoadStatus = 'err';\n    }\n  }\n});\nexport const threadReducerAction = threadSlice.actions;\nexport default threadSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","showedThreadsNum","threadsLength","threadsLoadStatus","threadLoadStatus","searchQuery","currentTape","threads","thread","threadName","threadDesc","createThreadError","getThreads","params","rejectWithValue","data","post","e","response","createThread","getThread","get","threadId","threadSlice","name","reducers","loadMoreThreads","state","action","setThreadName","th","payload","setThreadDesc","boardDesc","setSearchQuery","extraReducers","pending","fulfilled","threadsData","threadsDataLength","rejected","console","log","msg","threadData","threadReducerAction","actions","reducer"],"sources":["C:/Users/Никитос/Documents/GitHub/portfolio/content/forum-app/forum-app-front/src/features/threadSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from '../axios.js'\r\n\r\nconst initialState = {\r\n    showedThreadsNum: 0,\r\n    threadsLength: 0,\r\n    threadsLoadStatus: 'loading',\r\n    threadLoadStatus: 'loading',\r\n    searchQuery: '',\r\n    currentTape: 1,\r\n    threads: [],\r\n    thread: [],\r\n    threadName: '',\r\n    threadDesc: '',\r\n    createThreadError: '',\r\n}\r\n\r\nexport const getThreads = createAsyncThunk('/getThreads', async (params, { rejectWithValue }) => {\r\n    try {\r\n        const { data } = await axios.post(`/getThreads`, params)\r\n        return data\r\n    } catch (e) {\r\n        return rejectWithValue(e.response.data)\r\n    }\r\n})\r\n\r\nexport const createThread = createAsyncThunk('/createThread', async (params, { rejectWithValue }) => {\r\n    try {\r\n        const { data } = await axios.post(`/createThread`, params)\r\n        return data\r\n    } catch (e) {\r\n        return rejectWithValue(e.response.data)\r\n    }\r\n})\r\n\r\nexport const getThread = createAsyncThunk('/getThread', async (params, { rejectWithValue }) => {\r\n    try {\r\n        const { data } = await axios.get(`/getThread/${params.threadId}`, params)\r\n        return data\r\n    } catch (e) {\r\n        return rejectWithValue(e.response.data)\r\n    }\r\n})\r\n\r\nexport const threadSlice = createSlice({\r\n    name: 'thread',\r\n    initialState,\r\n    reducers: {\r\n        loadMoreThreads: (state, action) => {\r\n            state.currentTape += 1\r\n        },\r\n        setThreadName: (state, action) => {\r\n            state.th = action.payload\r\n        },\r\n        setThreadDesc: (state, action) => {\r\n            state.boardDesc = action.payload\r\n        },\r\n        setSearchQuery: (state, action) => {\r\n            state.searchQuery = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getThreads.pending]: (state) => {\r\n            state.threadsLoadStatus = 'loading'\r\n        },\r\n        [getThreads.fulfilled]: (state, action) => {\r\n            state.threads = action.payload.threadsData\r\n            state.threadsLength = action.payload.threadsDataLength\r\n            state.showedThreadsNum = action.payload.showedThreadsNum\r\n            state.threadsLoadStatus = 'loaded'\r\n        },\r\n        [getThreads.rejected]: (state, action) => {\r\n            console.log(action.payload.msg)\r\n            state.threadsLoadStatus = 'err'\r\n        },\r\n\r\n        [getThread.pending]: (state) => {\r\n            state.threadLoadStatus = 'loading'\r\n        },\r\n        [getThread.fulfilled]: (state, action) => {\r\n            state.thread = action.payload.threadData\r\n            state.threadLoadStatus = 'loaded'\r\n        },\r\n        [getThread.rejected]: (state, action) => {\r\n            console.log(action.payload.msg)\r\n            state.threadLoadStatus = 'err'\r\n        },\r\n    }\r\n})\r\n\r\nexport const threadReducerAction = threadSlice.actions\r\n\r\nexport default threadSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAE/B,MAAMC,YAAY,GAAG;EACjBC,gBAAgB,EAAE,CAAC;EACnBC,aAAa,EAAE,CAAC;EAChBC,iBAAiB,EAAE,SAAS;EAC5BC,gBAAgB,EAAE,SAAS;EAC3BC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,CAAC;EACdC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE,EAAE;EACdC,iBAAiB,EAAE;AACvB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGd,gBAAgB,CAAC,aAAa,EAAE,OAAOe,MAAM,WAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACxF,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAE,aAAY,EAAEH,MAAM,CAAC;IACxD,OAAOE,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOH,eAAe,CAACG,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,YAAY,GAAGrB,gBAAgB,CAAC,eAAe,EAAE,OAAOe,MAAM,YAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EAC5F,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAE,eAAc,EAAEH,MAAM,CAAC;IAC1D,OAAOE,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOH,eAAe,CAACG,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMK,SAAS,GAAGtB,gBAAgB,CAAC,YAAY,EAAE,OAAOe,MAAM,YAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACtF,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMhB,KAAK,CAACsB,GAAG,CAAE,cAAaR,MAAM,CAACS,QAAS,EAAC,EAAET,MAAM,CAAC;IACzE,OAAOE,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOH,eAAe,CAACG,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMQ,WAAW,GAAG1B,WAAW,CAAC;EACnC2B,IAAI,EAAE,QAAQ;EACdxB,YAAY;EACZyB,QAAQ,EAAE;IACNC,eAAe,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACrB,WAAW,IAAI,CAAC;IAC1B,CAAC;IACDuB,aAAa,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACG,EAAE,GAAGF,MAAM,CAACG,OAAO;IAC7B,CAAC;IACDC,aAAa,EAAE,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACM,SAAS,GAAGL,MAAM,CAACG,OAAO;IACpC,CAAC;IACDG,cAAc,EAAE,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACtB,WAAW,GAAGuB,MAAM,CAACG,OAAO;IACtC;EACJ,CAAC;EACDI,aAAa,EAAE;IACX,CAACvB,UAAU,CAACwB,OAAO,GAAIT,KAAK,IAAK;MAC7BA,KAAK,CAACxB,iBAAiB,GAAG,SAAS;IACvC,CAAC;IACD,CAACS,UAAU,CAACyB,SAAS,GAAG,CAACV,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACpB,OAAO,GAAGqB,MAAM,CAACG,OAAO,CAACO,WAAW;MAC1CX,KAAK,CAACzB,aAAa,GAAG0B,MAAM,CAACG,OAAO,CAACQ,iBAAiB;MACtDZ,KAAK,CAAC1B,gBAAgB,GAAG2B,MAAM,CAACG,OAAO,CAAC9B,gBAAgB;MACxD0B,KAAK,CAACxB,iBAAiB,GAAG,QAAQ;IACtC,CAAC;IACD,CAACS,UAAU,CAAC4B,QAAQ,GAAG,CAACb,KAAK,EAAEC,MAAM,KAAK;MACtCa,OAAO,CAACC,GAAG,CAACd,MAAM,CAACG,OAAO,CAACY,GAAG,CAAC;MAC/BhB,KAAK,CAACxB,iBAAiB,GAAG,KAAK;IACnC,CAAC;IAED,CAACiB,SAAS,CAACgB,OAAO,GAAIT,KAAK,IAAK;MAC5BA,KAAK,CAACvB,gBAAgB,GAAG,SAAS;IACtC,CAAC;IACD,CAACgB,SAAS,CAACiB,SAAS,GAAG,CAACV,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACnB,MAAM,GAAGoB,MAAM,CAACG,OAAO,CAACa,UAAU;MACxCjB,KAAK,CAACvB,gBAAgB,GAAG,QAAQ;IACrC,CAAC;IACD,CAACgB,SAAS,CAACoB,QAAQ,GAAG,CAACb,KAAK,EAAEC,MAAM,KAAK;MACrCa,OAAO,CAACC,GAAG,CAACd,MAAM,CAACG,OAAO,CAACY,GAAG,CAAC;MAC/BhB,KAAK,CAACvB,gBAAgB,GAAG,KAAK;IAClC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMyC,mBAAmB,GAAGtB,WAAW,CAACuB,OAAO;AAEtD,eAAevB,WAAW,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}