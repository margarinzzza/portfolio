{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios.js';\nconst initialState = {\n  showedBoardsNum: 0,\n  boardsLength: 0,\n  loadStatus: 'loading',\n  searchQuery: '',\n  currentTape: 1,\n  boards: []\n};\nexport const getBoards = createAsyncThunk('/getBoards', async (params, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const {\n      data\n    } = await axios.get(`/getBoards/${params}`, params);\n    return data;\n  } catch (e) {\n    return rejectWithValue(e.response.data);\n  }\n});\nexport const getBoard = createAsyncThunk('/getBoard', async (params, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await axios.get(`/getBoard/${params.name}`, params);\n    return data;\n  } catch (e) {\n    return rejectWithValue(e.response.data);\n  }\n});\nexport const boardsSlice = createSlice({\n  name: 'boards',\n  initialState,\n  reducers: {\n    loadMoreBoards: (state, payload) => {\n      state.currentTape += 1;\n    }\n  },\n  extraReducers: {\n    [getBoards.pending]: state => {\n      state.loadStatus = 'loading';\n    },\n    [getBoards.fulfilled]: (state, action) => {\n      console.log(action.payload);\n      state.boards = action.payload.boardsData;\n      state.boardsLength = action.payload.boardsDataLength;\n      state.showedBoardsNum = action.payload.showedBoardsNum;\n      state.loadStatus = 'loaded';\n    },\n    [getBoards.rejected]: (state, action) => {\n      console.log(action.payload.msg);\n      state.loadStatus = 'err';\n    }\n  }\n});\nexport const boardsReducerAction = boardsSlice.actions;\nexport default boardsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","showedBoardsNum","boardsLength","loadStatus","searchQuery","currentTape","boards","getBoards","params","rejectWithValue","data","get","e","response","getBoard","name","boardsSlice","reducers","loadMoreBoards","state","payload","extraReducers","pending","fulfilled","action","console","log","boardsData","boardsDataLength","rejected","msg","boardsReducerAction","actions","reducer"],"sources":["C:/Users/Никитос/Documents/GitHub/portfolio/content/forum-app/forum-app-front/src/features/boardsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from '../axios.js'\r\n\r\nconst initialState = {\r\n    showedBoardsNum: 0,\r\n    boardsLength: 0,\r\n    loadStatus: 'loading',\r\n    searchQuery: '',\r\n    currentTape: 1,\r\n    boards: [],\r\n}\r\n\r\nexport const getBoards = createAsyncThunk('/getBoards', async (params, { rejectWithValue }) => {\r\n    try {\r\n        const { data } = await axios.get(`/getBoards/${params}`, params)\r\n        return data\r\n    } catch (e) {\r\n        return rejectWithValue(e.response.data)\r\n    }\r\n})\r\n\r\nexport const getBoard = createAsyncThunk('/getBoard', async (params, { rejectWithValue }) => {\r\n    try {\r\n        const { data } = await axios.get(`/getBoard/${params.name}`, params)\r\n        return data\r\n    } catch (e) {\r\n        return rejectWithValue(e.response.data)\r\n    }\r\n})\r\n\r\nexport const boardsSlice = createSlice({\r\n    name: 'boards',\r\n    initialState,\r\n    reducers: {\r\n        loadMoreBoards: (state, payload) => {\r\n            state.currentTape += 1\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getBoards.pending]: (state) => {\r\n            state.loadStatus = 'loading'\r\n        },\r\n        [getBoards.fulfilled]: (state, action) => {\r\n            console.log(action.payload)\r\n            state.boards = action.payload.boardsData\r\n            state.boardsLength = action.payload.boardsDataLength\r\n            state.showedBoardsNum = action.payload.showedBoardsNum\r\n            state.loadStatus = 'loaded'\r\n        },\r\n        [getBoards.rejected]: (state, action) => {\r\n            console.log(action.payload.msg)\r\n            state.loadStatus = 'err'\r\n        },\r\n    }\r\n})\r\n\r\nexport const boardsReducerAction = boardsSlice.actions\r\n\r\nexport default boardsSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAE/B,MAAMC,YAAY,GAAG;EACjBC,eAAe,EAAE,CAAC;EAClBC,YAAY,EAAE,CAAC;EACfC,UAAU,EAAE,SAAS;EACrBC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,CAAC;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGT,gBAAgB,CAAC,YAAY,EAAE,OAAOU,MAAM,WAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACtF,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,cAAaH,MAAO,EAAC,EAAEA,MAAM,CAAC;IAChE,OAAOE,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOH,eAAe,CAACG,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,QAAQ,GAAGhB,gBAAgB,CAAC,WAAW,EAAE,OAAOU,MAAM,YAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACpF,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,aAAYH,MAAM,CAACO,IAAK,EAAC,EAAEP,MAAM,CAAC;IACpE,OAAOE,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOH,eAAe,CAACG,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMM,WAAW,GAAGnB,WAAW,CAAC;EACnCkB,IAAI,EAAE,QAAQ;EACdf,YAAY;EACZiB,QAAQ,EAAE;IACNC,cAAc,EAAE,CAACC,KAAK,EAAEC,OAAO,KAAK;MAChCD,KAAK,CAACd,WAAW,IAAI,CAAC;IAC1B;EACJ,CAAC;EACDgB,aAAa,EAAE;IACX,CAACd,SAAS,CAACe,OAAO,GAAIH,KAAK,IAAK;MAC5BA,KAAK,CAAChB,UAAU,GAAG,SAAS;IAChC,CAAC;IACD,CAACI,SAAS,CAACgB,SAAS,GAAG,CAACJ,KAAK,EAAEK,MAAM,KAAK;MACtCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACJ,OAAO,CAAC;MAC3BD,KAAK,CAACb,MAAM,GAAGkB,MAAM,CAACJ,OAAO,CAACO,UAAU;MACxCR,KAAK,CAACjB,YAAY,GAAGsB,MAAM,CAACJ,OAAO,CAACQ,gBAAgB;MACpDT,KAAK,CAAClB,eAAe,GAAGuB,MAAM,CAACJ,OAAO,CAACnB,eAAe;MACtDkB,KAAK,CAAChB,UAAU,GAAG,QAAQ;IAC/B,CAAC;IACD,CAACI,SAAS,CAACsB,QAAQ,GAAG,CAACV,KAAK,EAAEK,MAAM,KAAK;MACrCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACJ,OAAO,CAACU,GAAG,CAAC;MAC/BX,KAAK,CAAChB,UAAU,GAAG,KAAK;IAC5B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM4B,mBAAmB,GAAGf,WAAW,CAACgB,OAAO;AAEtD,eAAehB,WAAW,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}