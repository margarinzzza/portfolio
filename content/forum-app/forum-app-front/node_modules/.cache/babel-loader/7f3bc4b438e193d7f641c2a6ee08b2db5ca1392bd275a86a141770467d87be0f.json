{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  boards: []\n};\nconst fetchUserById = createAsyncThunk('users/fetchByIdStatus', async data => {\n  const response = await userAPI.fetchById(userId);\n  return response.data;\n});\nexport const boardsSlice = createSlice({\n  name: 'boards',\n  initialState,\n  reducers: {\n    register: () => {}\n  }\n});\nexport const boardsReducerAction = boardsSlice.actions;\nexport default boardsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","boards","fetchUserById","data","response","userAPI","fetchById","userId","boardsSlice","name","reducers","register","boardsReducerAction","actions","reducer"],"sources":["C:/Users/Никитос/Documents/GitHub/portfolio/content/forum-app/forum-app-front/src/features/boardsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    boards: [],\r\n}\r\n\r\nconst fetchUserById = createAsyncThunk('users/fetchByIdStatus',\r\n    async (data) => {\r\n        const response = await userAPI.fetchById(userId)\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const boardsSlice = createSlice({\r\n    name: 'boards',\r\n    initialState,\r\n    reducers: {\r\n        register: () => {\r\n\r\n        },\r\n    }\r\n})\r\n\r\nexport const boardsReducerAction = boardsSlice.actions\r\n\r\nexport default boardsSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,aAAa,GAAGH,gBAAgB,CAAC,uBAAuB,EAC1D,MAAOI,IAAI,IAAK;EACZ,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,SAAS,CAACC,MAAM,CAAC;EAChD,OAAOH,QAAQ,CAACD,IAAI;AACxB,CAAC,CACJ;AAED,OAAO,MAAMK,WAAW,GAAGV,WAAW,CAAC;EACnCW,IAAI,EAAE,QAAQ;EACdT,YAAY;EACZU,QAAQ,EAAE;IACNC,QAAQ,EAAE,MAAM,CAEhB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAGJ,WAAW,CAACK,OAAO;AAEtD,eAAeL,WAAW,CAACM,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}