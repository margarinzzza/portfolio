{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios.js';\nconst initialState = {\n  loadStatus: 'loading',\n  boards: []\n};\nexport const getBoards = createAsyncThunk('/getBoards', async (params, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const {\n      data\n    } = await axios.get('/getBoards', params);\n    return data;\n  } catch (e) {\n    return rejectWithValue(e.response.data);\n  }\n});\nexport const boardsSlice = createSlice({\n  name: 'boards',\n  initialState,\n  reducers: {\n    register: () => {}\n  },\n  extraReducers: {\n    [getBoards.pending]: state => {\n      state.loadStatus = 'loading';\n    },\n    [getBoards.fulfilled]: (state, action) => {\n      state.boards = action.payload.boardsData;\n      state.loadStatus = 'loaded';\n    },\n    [getBoards.rejected]: (state, action) => {\n      console.log(action.payload.message);\n      state.loadStatus = 'err';\n    }\n  }\n});\nexport const boardsReducerAction = boardsSlice.actions;\nexport default boardsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","loadStatus","boards","getBoards","params","rejectWithValue","data","get","e","response","boardsSlice","name","reducers","register","extraReducers","pending","state","fulfilled","action","payload","boardsData","rejected","console","log","message","boardsReducerAction","actions","reducer"],"sources":["C:/Users/Никитос/Documents/GitHub/portfolio/content/forum-app/forum-app-front/src/features/boardsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from '../axios.js'\r\n\r\nconst initialState = {\r\n    loadStatus: 'loading',\r\n    boards: [],\r\n}\r\n\r\nexport const getBoards = createAsyncThunk('/getBoards', async (params, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/getBoards', params)\r\n      return data\r\n    } catch (e) {\r\n      return rejectWithValue(e.response.data)\r\n    }\r\n  })\r\n\r\nexport const boardsSlice = createSlice({\r\n    name: 'boards',\r\n    initialState,\r\n    reducers: {\r\n        register: () => {\r\n\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getBoards.pending]: (state) => {\r\n          state.loadStatus = 'loading'\r\n        },\r\n        [getBoards.fulfilled]: (state, action) => {\r\n          state.boards = action.payload.boardsData\r\n          state.loadStatus = 'loaded'\r\n        },\r\n        [getBoards.rejected]: (state, action) => {\r\n            console.log(action.payload.message)\r\n          state.loadStatus = 'err'\r\n        },\r\n      }\r\n})\r\n\r\nexport const boardsReducerAction = boardsSlice.actions\r\n\r\nexport default boardsSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAE/B,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,SAAS;EACrBC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,gBAAgB,CAAC,YAAY,EAAE,OAAOM,MAAM,WAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACtF,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,YAAY,EAAEH,MAAM,CAAC;IACtD,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOE,CAAC,EAAE;IACV,OAAOH,eAAe,CAACG,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC;EACzC;AACF,CAAC,CAAC;AAEJ,OAAO,MAAMI,WAAW,GAAGb,WAAW,CAAC;EACnCc,IAAI,EAAE,QAAQ;EACdX,YAAY;EACZY,QAAQ,EAAE;IACNC,QAAQ,EAAE,MAAM,CAEhB;EACJ,CAAC;EACDC,aAAa,EAAE;IACX,CAACX,SAAS,CAACY,OAAO,GAAIC,KAAK,IAAK;MAC9BA,KAAK,CAACf,UAAU,GAAG,SAAS;IAC9B,CAAC;IACD,CAACE,SAAS,CAACc,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACxCF,KAAK,CAACd,MAAM,GAAGgB,MAAM,CAACC,OAAO,CAACC,UAAU;MACxCJ,KAAK,CAACf,UAAU,GAAG,QAAQ;IAC7B,CAAC;IACD,CAACE,SAAS,CAACkB,QAAQ,GAAG,CAACL,KAAK,EAAEE,MAAM,KAAK;MACrCI,OAAO,CAACC,GAAG,CAACL,MAAM,CAACC,OAAO,CAACK,OAAO,CAAC;MACrCR,KAAK,CAACf,UAAU,GAAG,KAAK;IAC1B;EACF;AACN,CAAC,CAAC;AAEF,OAAO,MAAMwB,mBAAmB,GAAGf,WAAW,CAACgB,OAAO;AAEtD,eAAehB,WAAW,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}