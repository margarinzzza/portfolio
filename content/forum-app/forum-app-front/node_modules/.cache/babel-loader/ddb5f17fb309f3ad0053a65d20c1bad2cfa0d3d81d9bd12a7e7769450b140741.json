{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../axios.js';\nconst initialState = {\n  showedThreadsNum: 0,\n  threadsLength: 0,\n  threadsLoadStatus: 'loading',\n  threadLoadStatus: 'loading',\n  searchQuery: '',\n  currentTape: 1,\n  threads: [],\n  thread: []\n};\nexport const getThreads = createAsyncThunk('/getThreads', async (params, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    console.log(params);\n    const {\n      data\n    } = await axios.post(`/getThreads`, params);\n    return data;\n  } catch (e) {\n    return rejectWithValue(e.response.data);\n  }\n});\nexport const getThread = createAsyncThunk('/getThread', async (params, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const {\n      data\n    } = await axios.get(`/getThread/${params.threadId}`, params);\n    return data;\n  } catch (e) {\n    return rejectWithValue(e.response.data);\n  }\n});\nexport const threadSlice = createSlice({\n  name: 'thread',\n  initialState,\n  reducers: {\n    loadMoreThreads: (state, action) => {\n      state.currentTape += 1;\n    },\n    setSearchQuery: (state, action) => {\n      state.searchQuery = action.payload;\n    }\n  },\n  extraReducers: {\n    [getThreads.pending]: state => {\n      state.threadsLoadStatus = 'loading';\n    },\n    [getThreads.fulfilled]: (state, action) => {\n      state.threads = action.payload.threadsData;\n      state.threadsLength = action.payload.threadsDataLength;\n      state.showedThreadsNum = action.payload.showedThreadsNum;\n      state.threadsLoadStatus = 'loaded';\n    },\n    [getThreads.rejected]: (state, action) => {\n      console.log(action.payload.msg);\n      state.threadsLoadStatus = 'err';\n    }\n\n    // [getThread.pending]: (state) => {\n    //     state.boardLoadStatus = 'loading'\n    // },\n    // [getThread.fulfilled]: (state, action) => {\n    //     state.board = action.payload.boardData\n    //     state.boardLoadStatus = 'loaded'\n    // },\n    // [getThread.rejected]: (state, action) => {\n    //     console.log(action.payload.msg)\n    //     state.boardLoadStatus = 'err'\n    // },\n  }\n});\n\nexport const threadReducerAction = threadSlice.actions;\nexport default threadSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","showedThreadsNum","threadsLength","threadsLoadStatus","threadLoadStatus","searchQuery","currentTape","threads","thread","getThreads","params","rejectWithValue","console","log","data","post","e","response","getThread","get","threadId","threadSlice","name","reducers","loadMoreThreads","state","action","setSearchQuery","payload","extraReducers","pending","fulfilled","threadsData","threadsDataLength","rejected","msg","threadReducerAction","actions","reducer"],"sources":["C:/Users/Никитос/Documents/GitHub/portfolio/content/forum-app/forum-app-front/src/features/threadSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from '../axios.js'\r\n\r\nconst initialState = {\r\n    showedThreadsNum: 0,\r\n    threadsLength: 0,\r\n    threadsLoadStatus: 'loading',\r\n    threadLoadStatus: 'loading',\r\n    searchQuery: '',\r\n    currentTape: 1,\r\n    threads: [],\r\n    thread: [],\r\n}\r\n\r\nexport const getThreads = createAsyncThunk('/getThreads', async (params, { rejectWithValue }) => {\r\n    try {\r\n        console.log(params)\r\n        const { data } = await axios.post(`/getThreads`, params)\r\n        return data\r\n    } catch (e) {\r\n        return rejectWithValue(e.response.data)\r\n    }\r\n})\r\n\r\nexport const getThread = createAsyncThunk('/getThread', async (params, { rejectWithValue }) => {\r\n    try {\r\n        const { data } = await axios.get(`/getThread/${params.threadId}`, params)\r\n        return data\r\n    } catch (e) {\r\n        return rejectWithValue(e.response.data)\r\n    }\r\n})\r\n\r\nexport const threadSlice = createSlice({\r\n    name: 'thread',\r\n    initialState,\r\n    reducers: {\r\n        loadMoreThreads: (state, action) => {\r\n            state.currentTape += 1\r\n        },\r\n        setSearchQuery: (state, action) => {\r\n            state.searchQuery = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [getThreads.pending]: (state) => {\r\n            state.threadsLoadStatus = 'loading'\r\n        },\r\n        [getThreads.fulfilled]: (state, action) => {\r\n            state.threads = action.payload.threadsData\r\n            state.threadsLength = action.payload.threadsDataLength\r\n            state.showedThreadsNum = action.payload.showedThreadsNum\r\n            state.threadsLoadStatus = 'loaded'\r\n        },\r\n        [getThreads.rejected]: (state, action) => {\r\n            console.log(action.payload.msg)\r\n            state.threadsLoadStatus = 'err'\r\n        },\r\n\r\n        // [getThread.pending]: (state) => {\r\n        //     state.boardLoadStatus = 'loading'\r\n        // },\r\n        // [getThread.fulfilled]: (state, action) => {\r\n        //     state.board = action.payload.boardData\r\n        //     state.boardLoadStatus = 'loaded'\r\n        // },\r\n        // [getThread.rejected]: (state, action) => {\r\n        //     console.log(action.payload.msg)\r\n        //     state.boardLoadStatus = 'err'\r\n        // },\r\n    }\r\n})\r\n\r\nexport const threadReducerAction = threadSlice.actions\r\n\r\nexport default threadSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAE/B,MAAMC,YAAY,GAAG;EACjBC,gBAAgB,EAAE,CAAC;EACnBC,aAAa,EAAE,CAAC;EAChBC,iBAAiB,EAAE,SAAS;EAC5BC,gBAAgB,EAAE,SAAS;EAC3BC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,CAAC;EACdC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE;AACZ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGX,gBAAgB,CAAC,aAAa,EAAE,OAAOY,MAAM,WAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACxF,IAAI;IACAC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;IACnB,MAAM;MAAEI;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAE,aAAY,EAAEL,MAAM,CAAC;IACxD,OAAOI,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOL,eAAe,CAACK,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMI,SAAS,GAAGpB,gBAAgB,CAAC,YAAY,EAAE,OAAOY,MAAM,YAA0B;EAAA,IAAxB;IAAEC;EAAgB,CAAC;EACtF,IAAI;IACA,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACoB,GAAG,CAAE,cAAaT,MAAM,CAACU,QAAS,EAAC,EAAEV,MAAM,CAAC;IACzE,OAAOI,IAAI;EACf,CAAC,CAAC,OAAOE,CAAC,EAAE;IACR,OAAOL,eAAe,CAACK,CAAC,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC3C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAGxB,WAAW,CAAC;EACnCyB,IAAI,EAAE,QAAQ;EACdtB,YAAY;EACZuB,QAAQ,EAAE;IACNC,eAAe,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACnB,WAAW,IAAI,CAAC;IAC1B,CAAC;IACDqB,cAAc,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACpB,WAAW,GAAGqB,MAAM,CAACE,OAAO;IACtC;EACJ,CAAC;EACDC,aAAa,EAAE;IACX,CAACpB,UAAU,CAACqB,OAAO,GAAIL,KAAK,IAAK;MAC7BA,KAAK,CAACtB,iBAAiB,GAAG,SAAS;IACvC,CAAC;IACD,CAACM,UAAU,CAACsB,SAAS,GAAG,CAACN,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAAClB,OAAO,GAAGmB,MAAM,CAACE,OAAO,CAACI,WAAW;MAC1CP,KAAK,CAACvB,aAAa,GAAGwB,MAAM,CAACE,OAAO,CAACK,iBAAiB;MACtDR,KAAK,CAACxB,gBAAgB,GAAGyB,MAAM,CAACE,OAAO,CAAC3B,gBAAgB;MACxDwB,KAAK,CAACtB,iBAAiB,GAAG,QAAQ;IACtC,CAAC;IACD,CAACM,UAAU,CAACyB,QAAQ,GAAG,CAACT,KAAK,EAAEC,MAAM,KAAK;MACtCd,OAAO,CAACC,GAAG,CAACa,MAAM,CAACE,OAAO,CAACO,GAAG,CAAC;MAC/BV,KAAK,CAACtB,iBAAiB,GAAG,KAAK;IACnC;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AACJ,CAAC,CAAC;;AAEF,OAAO,MAAMiC,mBAAmB,GAAGf,WAAW,CAACgB,OAAO;AAEtD,eAAehB,WAAW,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}