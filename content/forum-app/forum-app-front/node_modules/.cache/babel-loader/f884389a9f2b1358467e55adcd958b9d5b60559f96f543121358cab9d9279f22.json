{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041D\\u0438\\u043A\\u0438\\u0442\\u043E\\u0441\\\\Documents\\\\GitHub\\\\portfolio\\\\content\\\\forum-app\\\\forum-app-front\\\\src\\\\components\\\\board\\\\CreateThreadFormComponent.jsx\",\n  _s = $RefreshSig$();\nimport styles from './BoardComponent.module.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport { getBoard } from '../../features/boardSlice';\nimport { getThreads, threadReducerAction } from '../../features/threadSlice';\nimport SpinnerComponent from '../spinner/SpinnerComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateThreadFormComponent(_ref) {\n  _s();\n  let {\n    visible\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    boardHref\n  } = useParams();\n  useEffect(() => {\n    dispatch(getBoard({\n      boardHref\n    }));\n  }, []);\n  const {\n    board,\n    boardLoadStatus\n  } = useSelector(state => state.board);\n  const {\n    showedThreadsNum,\n    threadsLength,\n    threadsLoadStatus,\n    searchQuery,\n    currentTape,\n    threads\n  } = useSelector(state => state.thread);\n  useEffect(() => {\n    if (boardLoadStatus === 'loaded') {\n      dispatch(getThreads({\n        boardId: board.id,\n        searchQuery,\n        currentTape\n      }));\n    }\n  }, [boardLoadStatus, currentTape, searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ` ${visible && 'opacity-100'} popUp`,\n    children: \"CreateThreadFormComponent \\u043E\\u0442\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateThreadFormComponent, \"aR3kgCHnIufmrM/8yyW75vAZ3T8=\", false, function () {\n  return [useDispatch, useParams, useSelector, useSelector];\n});\n_c = CreateThreadFormComponent;\nexport default CreateThreadFormComponent;\nvar _c;\n$RefreshReg$(_c, \"CreateThreadFormComponent\");","map":{"version":3,"names":["styles","useDispatch","useSelector","Link","useParams","useEffect","getBoard","getThreads","threadReducerAction","SpinnerComponent","CreateThreadFormComponent","visible","dispatch","boardHref","board","boardLoadStatus","state","showedThreadsNum","threadsLength","threadsLoadStatus","searchQuery","currentTape","threads","thread","boardId","id"],"sources":["C:/Users/Никитос/Documents/GitHub/portfolio/content/forum-app/forum-app-front/src/components/board/CreateThreadFormComponent.jsx"],"sourcesContent":["import styles from './BoardComponent.module.scss'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport { getBoard } from '../../features/boardSlice';\nimport { getThreads, threadReducerAction } from '../../features/threadSlice';\nimport SpinnerComponent from '../spinner/SpinnerComponent';\n\nfunction CreateThreadFormComponent({ visible }) {\n\n  const dispatch = useDispatch()\n  const { boardHref } = useParams();\n  useEffect(() => {\n    dispatch(getBoard({ boardHref }))\n  }, [])\n  const { board, boardLoadStatus } = useSelector((state) => state.board)\n  const { showedThreadsNum, threadsLength, threadsLoadStatus, searchQuery, currentTape, threads } = useSelector((state) => state.thread)\n  useEffect(() => {\n    if (boardLoadStatus === 'loaded') {\n      dispatch(getThreads({ boardId: board.id, searchQuery, currentTape }))\n    }\n  }, [boardLoadStatus, currentTape, searchQuery])\n\n  return (\n    <div className={` ${visible && 'opacity-100'} popUp`}>\n      CreateThreadFormComponent\n      отменить\n    </div>\n  );\n}\n\nexport default CreateThreadFormComponent;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,8BAA8B;AACjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,2BAA2B;AACpD,SAASC,UAAU,EAAEC,mBAAmB,QAAQ,4BAA4B;AAC5E,OAAOC,gBAAgB,MAAM,6BAA6B;AAAC;AAE3D,SAASC,yBAAyB,OAAc;EAAA;EAAA,IAAb;IAAEC;EAAQ,CAAC;EAE5C,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAM;IAAEY;EAAU,CAAC,GAAGT,SAAS,EAAE;EACjCC,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACN,QAAQ,CAAC;MAAEO;IAAU,CAAC,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EACN,MAAM;IAAEC,KAAK;IAAEC;EAAgB,CAAC,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACF,KAAK,CAAC;EACtE,MAAM;IAAEG,gBAAgB;IAAEC,aAAa;IAAEC,iBAAiB;IAAEC,WAAW;IAAEC,WAAW;IAAEC;EAAQ,CAAC,GAAGpB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACO,MAAM,CAAC;EACtIlB,SAAS,CAAC,MAAM;IACd,IAAIU,eAAe,KAAK,QAAQ,EAAE;MAChCH,QAAQ,CAACL,UAAU,CAAC;QAAEiB,OAAO,EAAEV,KAAK,CAACW,EAAE;QAAEL,WAAW;QAAEC;MAAY,CAAC,CAAC,CAAC;IACvE;EACF,CAAC,EAAE,CAACN,eAAe,EAAEM,WAAW,EAAED,WAAW,CAAC,CAAC;EAE/C,oBACE;IAAK,SAAS,EAAG,IAAGT,OAAO,IAAI,aAAc,QAAQ;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAG/C;AAEV;AAAC,GArBQD,yBAAyB;EAAA,QAEfT,WAAW,EACNG,SAAS,EAIIF,WAAW,EACoDA,WAAW;AAAA;AAAA,KARtGQ,yBAAyB;AAuBlC,eAAeA,yBAAyB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}