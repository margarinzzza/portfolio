{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041D\\u0438\\u043A\\u0438\\u0442\\u043E\\u0441\\\\Documents\\\\GitHub\\\\portfolio\\\\content\\\\words-in-memory\\\\src\\\\GameScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameScreen = _ref => {\n  _s();\n  let {\n    timeForWord,\n    finalWordsArr\n  } = _ref;\n  const [readySlideShow, setReadySlideShow] = useState(false);\n  const [isSlideShowEnd, setIsSlideShowEnd] = useState(false);\n  const [word, setWord] = useState('');\n  const wordsSlideShow = () => {\n    setReadySlideShow(true);\n    let i = 0;\n    let interval = setInterval(() => {\n      if (i >= finalWordsArr.length) {\n        setIsSlideShowEnd(true);\n        return clearInterval(interval);\n      }\n      console.log(finalWordsArr[i]);\n      setWord(finalWordsArr[i]);\n      i++;\n    }, timeForWord * 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameScreen\",\n    children: [!readySlideShow && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"linkItem\",\n      onClick: () => wordsSlideShow(),\n      children: \"I`m ready\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }, this), !isSlideShowEnd && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }, this), !isSlideShowEnd && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(GameScreen, \"DQEuSvlSBgbUOUFwdy1YaBW/beY=\");\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["useState","GameScreen","timeForWord","finalWordsArr","readySlideShow","setReadySlideShow","isSlideShowEnd","setIsSlideShowEnd","word","setWord","wordsSlideShow","i","interval","setInterval","length","clearInterval","console","log"],"sources":["C:/Users/Никитос/Documents/GitHub/portfolio/content/words-in-memory/src/GameScreen.jsx"],"sourcesContent":["import { useState } from \"react\"\n\nconst GameScreen = ({ timeForWord, finalWordsArr }) => {\n\n  const [readySlideShow, setReadySlideShow] = useState(false)\n  const [isSlideShowEnd, setIsSlideShowEnd] = useState(false)\n  const [word, setWord] = useState('')\n\n  const wordsSlideShow = () => {\n    setReadySlideShow(true)\n    let i = 0\n    let interval = setInterval(() => {\n      if (i >= finalWordsArr.length) {\n        setIsSlideShowEnd(true)\n        return clearInterval(interval)\n      }\n      console.log(finalWordsArr[i])\n      setWord(finalWordsArr[i])\n      i++\n    }, timeForWord * 1000)\n  }\n\n  return (\n    <div className=\"gameScreen\">\n      {!readySlideShow && <h2 className=\"linkItem\" onClick={() => wordsSlideShow()}>I`m ready</h2>}\n      {!isSlideShowEnd && <h3>{word}</h3>}\n      {!isSlideShowEnd &&\n        <div>\n          \n        </div>\n    }\n    </div>\n  );\n}\n\nexport default GameScreen;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,UAAU,GAAG,QAAoC;EAAA;EAAA,IAAnC;IAAEC,WAAW;IAAEC;EAAc,CAAC;EAEhD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMU,cAAc,GAAG,MAAM;IAC3BL,iBAAiB,CAAC,IAAI,CAAC;IACvB,IAAIM,CAAC,GAAG,CAAC;IACT,IAAIC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIF,CAAC,IAAIR,aAAa,CAACW,MAAM,EAAE;QAC7BP,iBAAiB,CAAC,IAAI,CAAC;QACvB,OAAOQ,aAAa,CAACH,QAAQ,CAAC;MAChC;MACAI,OAAO,CAACC,GAAG,CAACd,aAAa,CAACQ,CAAC,CAAC,CAAC;MAC7BF,OAAO,CAACN,aAAa,CAACQ,CAAC,CAAC,CAAC;MACzBA,CAAC,EAAE;IACL,CAAC,EAAET,WAAW,GAAG,IAAI,CAAC;EACxB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,WACxB,CAACE,cAAc,iBAAI;MAAI,SAAS,EAAC,UAAU;MAAC,OAAO,EAAE,MAAMM,cAAc,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,EAC3F,CAACJ,cAAc,iBAAI;MAAA,UAAKE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,EAClC,CAACF,cAAc,iBACd;MAAA;MAAA;MAAA;IAAA,QAEM;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEV,CAAC;AAAA,GA/BKL,UAAU;AAAA,KAAVA,UAAU;AAiChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}